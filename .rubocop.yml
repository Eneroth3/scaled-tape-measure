require: rubocop-sketchup

AllCops:
  DisplayCopNames: true
  Exclude:
    - 'src/*/vendor/**/*'
  SketchUp:
    TargetSketchUpVersion: 2017

# Too noisy. Rely on MethodLength instead.
Metrics/AbcSize:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false

# Aim for 10 lines or less but accept longer ones when things can't be extracted
# to sensible methods.
Metrics/MethodLength:
  Max: 20

# SketchUp Tool interface and observer interfaces don't follow Ruby naming
# conventions.
# TODO: Add Observer methods.
Naming/MethodName:
  IgnoredPatterns:
    - '^\s*enableVCB\?(\(.*\))?$'
    - '^\s*getExtents(\(.*\))?$'
    - '^\s*getInstructorContentDirectory(\(.*\))?$'
    - '^\s*getMenu(\(.*\))?$'
    - '^\s*onCancel(\(.*\))?$'
    - '^\s*onKeyDown(\(.*\))?$'
    - '^\s*onKeyUp(\(.*\))?$'
    - '^\s*onLButtonDoubleClick(\(.*\))?$'
    - '^\s*onLButtonDown(\(.*\))?$'
    - '^\s*onLButtonUp(\(.*\))?$'
    - '^\s*onMButtonDoubleClick(\(.*\))?$'
    - '^\s*onMButtonDown(\(.*\))?$'
    - '^\s*onMButtonUp(\(.*\))?$'
    - '^\s*onMouseEnter(\(.*\))?$'
    - '^\s*onMouseLeave(\(.*\))?$'
    - '^\s*onMouseMove(\(.*\))?$'
    - '^\s*onMouseWheel(\(.*\))?$'
    - '^\s*onRButtonDown(\(.*\))?$'
    - '^\s*onRButtonUp(\(.*\))?$'
    - '^\s*onReturn(\(.*\))?$'
    - '^\s*onSetCursor(\(.*\))?$'
    - '^\s*onUserText(\(.*\))?$'

# Allow common names in SketchUp 3d modeling.
Naming/UncommunicativeMethodParamName:
  AllowedNames:
    - 'x'
    - 'y'
    - 'z'
    - 'u'
    - 'v'
    - 'uv'
    - 'ip'

Layout/AlignHash:
  EnforcedColonStyle: table

# Let Git client handle file endings.
Layout/EndOfLine:
  Enabled: false

Layout/IndentFirstArrayElement:
  EnforcedStyle: consistent
Layout/IndentFirstHashElement:
  EnforcedStyle: consistent

# Class vars can be used, but only if you know why you are using them.
Style/ClassVars:
  Enabled: false

# False positives for modules documented in one file but not another, e.g. the
# extension wrapper.
Style/Documentation:
  Enabled: false

# Double negation is a handy Ruby idiom to assure a value is a boolean, as there
# is no to_bool/to_boolean/to_b method. What the cop suggest, !var.nil?, doesn't
# even cater for boolean false as input.
Style/DoubleNegation:
  Enabled: false

# Don't use frozen string literals in the registrar as it clashes with the need
# to force character encoding on __FILE__.
# See https://forums.sketchup.com/t/force-encoding-when-using-frozens-tring-literals/109362.
# TODO: Use frozen string literals in registrar.
Style/FrozenStringLiteralComment:
  Exclude:
    - 'src/*.rb'

# Single quotes being faster is hardly measurable and only affects parse time.
# Enforcing double quotes reduces the times where you need to change them
# when introducing an interpolation. Use single quotes only if their semantics
# are needed.
Style/StringLiterals:
  EnforcedStyle: double_quotes

SketchupDeprecations:
  Enabled: true

SketchupPerformance:
  Enabled: true

SketchupRequirements:
  Enabled: true

SketchupSuggestions:
  Enabled: true
